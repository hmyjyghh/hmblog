(window.webpackJsonp=window.webpackJsonp||[]).push([[92],{577:function(t,s,a){"use strict";a.r(s);var n=a(3),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("div",{staticClass:"language-py extra-class"},[s("pre",{pre:!0,attrs:{class:"language-py"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置随机种子，保证结果可复现")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_seed")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("seed"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  torch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("manual_seed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("seed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  torch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cuda"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("manual_seed_all"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("seed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  np"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("random"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("seed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("seed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  torch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("backends"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cudnn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("deterministic "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\n")])])]),s("p",[t._v("设置随机种子在大模型训练中"),s("strong",[t._v("极其重要")]),t._v("，它的主要作用是"),s("strong",[t._v("保证实验的可复现性（Reproducibility）")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"为什么需要设置随机种子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要设置随机种子"}},[t._v("#")]),t._v(" 为什么需要设置随机种子？")]),t._v(" "),s("p",[t._v("深度学习训练过程中涉及大量的随机性，包括：")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("权重初始化")]),t._v("：神经网络参数的初始值是随机生成的")]),t._v(" "),s("li",[s("strong",[t._v("数据 shuffling")]),t._v("：数据加载时的随机打乱顺序")]),t._v(" "),s("li",[s("strong",[t._v("Dropout")]),t._v("：随机丢弃神经元")]),t._v(" "),s("li",[s("strong",[t._v("数据增强")]),t._v("：随机变换（如随机裁剪、旋转等）")]),t._v(" "),s("li",[s("strong",[t._v("优化器")]),t._v("：某些优化算法中的随机因素")]),t._v(" "),s("li",[s("strong",[t._v("CUDA 操作")]),t._v("：GPU 计算中的并行操作可能引入不确定性")])]),t._v(" "),s("p",[t._v("如果没有设置随机种子，每次运行程序都会得到不同的随机数序列，导致：")]),t._v(" "),s("ul",[s("li",[t._v("每次训练的损失曲线不同")]),t._v(" "),s("li",[t._v("最终模型性能有差异")]),t._v(" "),s("li",[t._v("无法准确比较不同超参数或模型架构的效果")])]),t._v(" "),s("h2",{attrs:{id:"你提供的代码详解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#你提供的代码详解"}},[t._v("#")]),t._v(" 你提供的代码详解")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_seed")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("seed"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  torch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("manual_seed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("seed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置 PyTorch CPU 的随机种子")]),t._v("\n  torch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cuda"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("manual_seed_all"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("seed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置所有 GPU 的随机种子")]),t._v("\n  np"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("random"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("seed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("seed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("             "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置 NumPy 的随机种子")]),t._v("\n  torch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("backends"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cudnn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("deterministic "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 确保 CUDA 卷积操作 deterministic")]),t._v("\n")])])]),s("h3",{attrs:{id:"每行代码的作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#每行代码的作用"}},[t._v("#")]),t._v(" 每行代码的作用：")]),t._v(" "),s("ol",[s("li",[s("strong",[s("code",[t._v("torch.manual_seed(seed)")])]),t._v("：")])]),t._v(" "),s("ul",[s("li",[t._v("设置 PyTorch 在 CPU 上的随机数生成器种子")]),t._v(" "),s("li",[t._v("影响所有在 CPU 上进行的随机操作")])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[s("strong",[s("code",[t._v("torch.cuda.manual_seed_all(seed)")])]),t._v("：")])]),t._v(" "),s("ul",[s("li",[t._v("设置所有 GPU 的随机种子")]),t._v(" "),s("li",[t._v("确保在多 GPU 训练时，所有 GPU 的随机行为一致")])]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[s("strong",[s("code",[t._v("np.random.seed(seed)")])]),t._v("：")])]),t._v(" "),s("ul",[s("li",[t._v("设置 NumPy 的随机种子")]),t._v(" "),s("li",[t._v("影响任何使用 NumPy 的随机操作（如数据预处理）")])]),t._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[s("strong",[s("code",[t._v("torch.backends.cudnn.deterministic = True")])]),t._v("：")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("这是最关键的一步")]),t._v("！")]),t._v(" "),s("li",[t._v("CUDA 的 cuDNN 库为了性能优化，会使用非确定性的算法")]),t._v(" "),s("li",[t._v("设置为 "),s("code",[t._v("True")]),t._v(" 会强制使用确定性算法，牺牲一些性能来保证可复现性")])]),t._v(" "),s("h2",{attrs:{id:"使用方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用方法"}},[t._v("#")]),t._v(" 使用方法")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在训练开始前调用")]),t._v("\nset_seed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 42是常用的默认值，但可以是任何整数")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 然后进行模型初始化、数据加载、训练等操作")]),t._v("\nmodel "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" YourModel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntrain_loader "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DataLoader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 训练循环...")]),t._v("\n")])])]),s("h2",{attrs:{id:"注意事项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注意事项"}},[t._v("#")]),t._v(" 注意事项")]),t._v(" "),s("ol",[s("li",[s("p",[s("strong",[t._v("性能代价")]),t._v("："),s("code",[t._v("torch.backends.cudnn.deterministic = True")]),t._v(" 可能会使训练速度"),s("strong",[t._v("变慢")]),t._v("10-30%，因为禁用了某些优化。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("不完全确定性")]),t._v("：即使在设置了所有这些之后，由于硬件和软件栈的复杂性，"),s("strong",[t._v("100% 的完全复现仍然很难保证")]),t._v("，特别是在多GPU训练中。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("随机种子的选择")]),t._v("：种子值本身不重要（42是惯例），重要的是"),s("strong",[t._v("每次实验使用相同的种子")]),t._v("。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("实验对比")]),t._v("：当比较不同模型或超参数时，应该在"),s("strong",[t._v("相同的随机种子")]),t._v("下进行，这样才能公平比较。")])])]),t._v(" "),s("h2",{attrs:{id:"实际应用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实际应用场景"}},[t._v("#")]),t._v(" 实际应用场景")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 比较不同学习率的效果")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" lr "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1e-3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1e-4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1e-5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  set_seed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 每次都用相同的种子")]),t._v("\n  model "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" create_model"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  optimizer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Adam"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("model"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parameters"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("lr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 训练和评估...")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这样得到的性能差异才能真正反映学习率的影响，而不是随机性")]),t._v("\n")])])]),s("p",[s("strong",[t._v("总结")]),t._v("：设置随机种子是深度学习研究中保证实验结果可靠、可比较的基础性工作，对于大模型训练尤其重要，因为训练成本极高，必须确保实验结果的可靠性。")])])}),[],!1,null,null,null);s.default=e.exports}}]);