(window.webpackJsonp=window.webpackJsonp||[]).push([[88],{570:function(t,a,s){"use strict";s.r(a);var n=s(3),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" torch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("utils"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" DataLoader\n\nDataLoader"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("train_dataset"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" batch_size"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("batch_size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" shuffle"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"dataloader-的作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dataloader-的作用"}},[t._v("#")]),t._v(" DataLoader 的作用")]),t._v(" "),a("p",[a("code",[t._v("DataLoader")]),t._v(" 是 PyTorch 中用于数据加载的核心工具，主要作用是将数据集（"),a("code",[t._v("Dataset")]),t._v("）按指定方式封装成可迭代的批次数据，方便模型训练或推理时高效读取和处理数据。")]),t._v(" "),a("p",[t._v("它的核心功能和优势体现在以下几个方面：")]),t._v(" "),a("ol",[a("li",[a("p",[a("strong",[t._v("批次处理数据")]),a("br"),t._v("\n将数据集按 "),a("code",[t._v("batch_size")]),t._v(" 拆分成多个小批次（batch）。例如设置 "),a("code",[t._v("batch_size=32")]),t._v(" 时，每次迭代会返回 32 个样本，避免一次性加载全部数据导致内存溢出，同时也符合神经网络的批量计算特性。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("数据打乱（shuffle）")]),a("br"),t._v("\n通过 "),a("code",[t._v("shuffle=True")]),t._v(" 可以在每个 epoch（完整遍历一次数据集）前随机打乱数据顺序，减少数据顺序对模型训练的影响，提高模型泛化能力。如果是测试/验证阶段，通常设为 "),a("code",[t._v("shuffle=False")]),t._v(" 保持数据顺序稳定。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("并行加速")]),a("br"),t._v("\n支持通过 "),a("code",[t._v("num_workers")]),t._v(" 参数设置多进程加载数据（默认值为 0，即主进程加载），在数据预处理耗时较长时（如图片解码、增强等），能显著提升数据加载速度，避免 GPU 等待数据而空闲。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("自动拼接与转换")]),a("br"),t._v("\n自动将批次数据拼接成张量（Tensor），并可配合 "),a("code",[t._v("collate_fn")]),t._v(" 参数自定义批次数据的拼接逻辑（例如处理变长序列、不同结构的数据）。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("迭代器接口")]),a("br"),t._v("\n封装成可迭代对象，方便在训练循环中使用：")])])]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" batch_idx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" label"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("enumerate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dataloader"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# data: 批次数据（张量），shape 为 (batch_size, ...)")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# label: 批次标签（张量）")]),t._v("\n  outputs "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" model"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 计算损失、反向传播等")]),t._v("\n")])])]),a("p",[t._v("总结来说，"),a("code",[t._v("DataLoader")]),t._v(" 是连接数据集和模型的桥梁，通过高效的数据分批、打乱、并行加载等机制，优化了数据流向模型的整个过程，是 PyTorch 训练流程中不可或缺的组件。")])])}),[],!1,null,null,null);a.default=e.exports}}]);