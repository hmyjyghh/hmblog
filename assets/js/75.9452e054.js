(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{557:function(r,t,s){"use strict";s.r(t);var a=s(3),_=Object(a.a)({},(function(){var r=this,t=r._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[t("h2",{attrs:{id:"transformer-原理详解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#transformer-原理详解"}},[r._v("#")]),r._v(" Transformer 原理详解")]),r._v(" "),t("h3",{attrs:{id:"_1-q-为什么需要-mask-机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-q-为什么需要-mask-机制"}},[r._v("#")]),r._v(" 1. Q: 为什么需要 Mask 机制？")]),r._v(" "),t("ul",[t("li",[r._v("A: 因为在 Transformer 模型中，每个位置的输出是依赖于所有位置的输入的，所以需要 Mask 机制来屏蔽掉一些位置的输入，避免信息泄露。")])]),r._v(" "),t("h3",{attrs:{id:"_2-q1-什么是编码器-解码器架构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-q1-什么是编码器-解码器架构"}},[r._v("#")]),r._v(" 2. Q1: 什么是编码器-解码器架构？")]),r._v(" "),t("h3",{attrs:{id:"_3-q3-为什么需要位置编码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-q3-为什么需要位置编码"}},[r._v("#")]),r._v(" 3. Q3：为什么需要位置编码？")]),r._v(" "),t("ol",[t("li",[r._v("没有位置编码的Transformer：对于下面两句话，在他看来是完全一样的：\n"),t("ul",[t("li",[r._v("狗咬了我")]),r._v(" "),t("li",[r._v("我咬了狗")])])])]),r._v(" "),t("ul",[t("li",[r._v("这显然是灾难性的")])]),r._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[t("strong",[r._v("有位置编码的Transformer")]),r._v("：\n现在，我们在把单词纸条扔进袋子之前，做了一件聪明事：我们在每张纸条的角落，\n用 "),t("code",[r._v("invisible ink（隐形墨水）")]),r._v("写上这个单词的位置，比如“第1个”、“第2个”。\n那个聪明的人（Transformer）仍然可以同时看到所有纸条来分析单词间的关系，\n但这次他多了一个工具："),t("code",[r._v("一个特殊的眼镜（位置解码器）。")]),r._v("通过这个眼镜，他能看到角落里的隐形墨水，知道每个单词原本的位置。")])]),r._v(" "),t("ul",[t("li",[t("p",[r._v("这就好像是，他在思考“狗咬了我”和“我咬了狗”这两个句子时，\n他能根据单词的位置，正确地理解句子的含义，而不是简单地根据单词的顺序。")])]),r._v(" "),t("li",[t("p",[r._v("所以，他现在能知道：")]),r._v(" "),t("ul",[t("li",[t("p",[r._v("“狗”是第1个，“咬”是第2个，“我”是第3个 -> “狗咬了我”")])]),r._v(" "),t("li",[t("p",[r._v("“我”是第1个，“咬”是第2个，“狗”是第3个 -> “我咬了狗”")])])])])]),r._v(" "),t("p",[t("em",[t("strong",[r._v("位置编码，就是那张纸条角落里的“隐形墨水”。")])])]),r._v(" "),t("p",[r._v("在将单词的词嵌入（Word Embedding）向量输入给Transformer之前，我们"),t("strong",[r._v("把一个专门表示位置的向量（位置编码）加进去")]),r._v("。\n*   "),t("code",[r._v("输入向量 = 词嵌入向量 + 位置编码向量")])])])}),[],!1,null,null,null);t.default=_.exports}}]);