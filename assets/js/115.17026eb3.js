(window.webpackJsonp=window.webpackJsonp||[]).push([[115],{596:function(t,s,a){"use strict";a.r(s);var n=a(3),r=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"存在检查"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#存在检查"}},[t._v("#")]),t._v(" 存在检查")]),t._v(" "),s("p",[t._v("这行代码是一个 "),s("strong",[t._v('"存在检查"')]),t._v("，让我用通俗的方式解释：")]),t._v(" "),s("h2",{attrs:{id:"🍎-生活化比喻"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🍎-生活化比喻"}},[t._v("#")]),t._v(" 🍎 生活化比喻")]),t._v(" "),s("p",[t._v("想象你在超市找东西，你想知道购物车里有没有这三样：")]),t._v(" "),s("ul",[s("li",[t._v("苹果（embed）")]),t._v(" "),s("li",[t._v("香蕉（norm）")]),t._v(" "),s("li",[t._v("橙子（lm_head）")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 就像问："购物车里有苹果、香蕉或橙子吗？"')]),t._v("\nhas_fruit "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("水果 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" 购物车 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" 水果 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'苹果'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'香蕉'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'橙子'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h2",{attrs:{id:"🔍-代码解释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🔍-代码解释"}},[t._v("#")]),t._v(" 🔍 代码解释")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("s "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" s "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'embed'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'norm'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'lm_head'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("p",[t._v("意思是：\n"),s("strong",[t._v('"检查 '),s("code",[t._v("name")]),t._v(" 字符串中是否包含 'embed'、'norm' 或 'lm_head' 中的任意一个\"")])]),t._v(" "),s("h2",{attrs:{id:"📝-具体例子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#📝-具体例子"}},[t._v("#")]),t._v(" 📝 具体例子")]),t._v(" "),s("p",[t._v("假设 "),s("code",[t._v("name")]),t._v(" 是这些字符串：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"transformer.embed.weight"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 检查：'embed' 在 \"transformer.embed.weight\" 中吗？ → ✅ True")]),t._v("\n\nname "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"transformer.norm.bias"')]),t._v("  \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 检查：'norm' 在 \"transformer.norm.bias\" 中吗？ → ✅ True")]),t._v("\n\nname "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lm_head.weight"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 检查：'lm_head' 在 \"lm_head.weight\" 中吗？ → ✅ True")]),t._v("\n\nname "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"transformer.layer.0.attention.weight"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 检查：都不在 → ❌ False")]),t._v("\n")])])]),s("h2",{attrs:{id:"🎯-在-lora-中的实际用途"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🎯-在-lora-中的实际用途"}},[t._v("#")]),t._v(" 🎯 在 LoRA 中的实际用途")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在 LoRA 代码中，这通常用于：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" s "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'embed'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'norm'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'lm_head'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果是嵌入层、归一化层或输出头")]),t._v("\n  requires_grad "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" embed_requires_grad  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 特殊处理")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 其他层")]),t._v("\n  requires_grad "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\n")])])]),s("h2",{attrs:{id:"💡-一句话总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#💡-一句话总结"}},[t._v("#")]),t._v(" 💡 一句话总结")]),t._v(" "),s("p",[s("strong",[t._v('"看看这个名字是不是嵌入层、归一化层或输出头中的某一个"')])]),t._v(" "),s("p",[t._v("这样理解就很简单了吧！")]),t._v(" "),s("h2",{attrs:{id:"字典遍历"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字典遍历"}},[t._v("#")]),t._v(" 字典遍历")]),t._v(" "),s("ul",[s("li",[t._v("检查目标列表中的每个词语是否出现在问题字符串中")])]),t._v(" "),s("div",{staticClass:"language-py extra-class"},[s("pre",{pre:!0,attrs:{class:"language-py"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("classify_question")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("question"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""简单的问题分类"""')]),t._v("\n    keywords "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'service'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'服务'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'配送'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'运输'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'快递'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'price'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'价格'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'费用'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'多少钱'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'收费'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'time'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'时间'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'多久'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'时效'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'几天'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tracking'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'查询'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'跟踪'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'物流'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'单号'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" category"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" words "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" keywords"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("items"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"category: ')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("category"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(", words: ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("words"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("word "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" question "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" word "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" words"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" category\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'other'")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" __name__ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'__main__'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    tag "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" classify_question"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'帮我查一下xxx单号到哪里了'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"意图识别标签: ')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("tag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v("\"\"\"\ncategory: service, words: ['服务', '配送', '运输', '快递']\ncategory: price, words: ['价格', '费用', '多少钱', '收费']\ncategory: time, words: ['时间', '多久', '时效', '几天']\ncategory: tracking, words: ['查询', '跟踪', '物流', '单号']\n意图识别标签: tracking\n\"\"\"")]),t._v("\n")])])]),s("h2",{attrs:{id:"if-not-的使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#if-not-的使用"}},[t._v("#")]),t._v(" if not 的使用")]),t._v(" "),s("h2",{attrs:{id:"条件判断规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#条件判断规则"}},[t._v("#")]),t._v(" 条件判断规则")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("code",[t._v("stream")]),t._v(" 的值")]),t._v(" "),s("th",[s("code",[t._v("not stream")])]),t._v(" "),s("th",[s("code",[t._v("if not stream:")]),t._v(" 结果")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("True")])]),t._v(" "),s("td",[s("code",[t._v("False")])]),t._v(" "),s("td",[s("strong",[t._v("不执行")]),t._v("（条件不满足）")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("False")])]),t._v(" "),s("td",[s("code",[t._v("True")])]),t._v(" "),s("td",[s("strong",[t._v("执行")]),t._v("（条件满足）")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("None")])]),t._v(" "),s("td",[s("code",[t._v("True")])]),t._v(" "),s("td",[s("strong",[t._v("执行")]),t._v("（条件满足）")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("0")])]),t._v(" "),s("td",[s("code",[t._v("True")])]),t._v(" "),s("td",[s("strong",[t._v("执行")]),t._v("（条件满足）")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v('""')]),t._v(" (空字符串)")]),t._v(" "),s("td",[s("code",[t._v("True")])]),t._v(" "),s("td",[s("strong",[t._v("执行")]),t._v("（条件满足）")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("[]")]),t._v(" (空列表)")]),t._v(" "),s("td",[s("code",[t._v("True")])]),t._v(" "),s("td",[s("strong",[t._v("执行")]),t._v("（条件满足）")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("{}")]),t._v(" (空字典)")]),t._v(" "),s("td",[s("code",[t._v("True")])]),t._v(" "),s("td",[s("strong",[t._v("执行")]),t._v("（条件满足）")])])])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("if not stream:")]),t._v(" 检查的是 "),s("strong",[t._v('"假值"')]),t._v(" 条件")]),t._v(" "),s("li",[t._v("当 "),s("code",[t._v("stream")]),t._v(" 是 "),s("code",[t._v("True")]),t._v(" 时，"),s("code",[t._v("not True = False")]),t._v("，所以"),s("strong",[t._v("不会")]),t._v("进入条件分支")]),t._v(" "),s("li",[t._v("只有当 "),s("code",[t._v("stream")]),t._v(" 是 "),s("code",[t._v("False")]),t._v("、"),s("code",[t._v("None")]),t._v("、"),s("code",[t._v("0")]),t._v('、空字符串、空列表等"假值"时才会进入')])]),t._v(" "),s("h2",{attrs:{id:"切片语法解释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#切片语法解释"}},[t._v("#")]),t._v(" 切片语法解释")]),t._v(" "),s("ul",[s("li",[t._v("去类比，数据里面的截取")])]),t._v(" "),s("div",{staticClass:"language-py extra-class"},[s("pre",{pre:!0,attrs:{class:"language-py"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("start"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("stop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("step"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("ul",[s("li",[s("p",[t._v("start："),s("code",[t._v("起始索引")]),t._v("（默认为0）")])]),t._v(" "),s("li",[s("p",[t._v("stop："),s("code",[t._v("结束索引")]),t._v("（默认为列表长度）")])]),t._v(" "),s("li",[s("p",[t._v("step："),s("code",[t._v("步长")]),t._v("（默认为1）")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);